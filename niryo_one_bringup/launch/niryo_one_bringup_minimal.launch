<launch>
    <!-- This launch file is mainly for simulations, intergrating all necessary drivers and controllers in the "niryo_one" namespace 
    -->

    <!-- Will not work on Raspberry Pi, to use on a non-ARM computer only 
        Hardware communication is disabled with simulation_mode flag
        The hardware interface will just follow the command given by the chosen controller (ros_controllers)
    -->
    
    <arg name="execute_on_niryo_one_raspberry_pi_image" value="false"/>
    <arg name="urdf_without_meshes" default="false" />
    <arg name="hardware_version" default="2" /> 
    <arg name="without_gripper" default="true"/>
    <arg name="niryo_one_sim_mode" default="true" />
    

    <group ns="niryo_one">
        <param name="hardware_version" type="int" value="$(arg hardware_version)" /> 
        <param name="reboot_when_auto_change_version" type="bool" value="true" />
        <group ns="robot_command_validation">
            <rosparam file="$(find niryo_one_bringup)/config/v1/robot_command_validation.yaml" if="$(eval hardware_version == 1)" />
            <rosparam file="$(find niryo_one_bringup)/config/v2/robot_command_validation.yaml" if="$(eval hardware_version == 2)" />
        </group>

        <group ns="motors">
            <rosparam file="$(find niryo_one_bringup)/config/v1/niryo_one_motors.yaml" if="$(eval hardware_version == 1)"/>
            <rosparam file="$(find niryo_one_bringup)/config/v2/niryo_one_motors.yaml" if="$(eval hardware_version == 2)"/>
            <rosparam file="$(find niryo_one_bringup)/config/v1/stepper_params.yaml" if="$(eval hardware_version == 1)"/>
            <rosparam file="$(find niryo_one_bringup)/config/v2/stepper_params.yaml" if="$(eval hardware_version == 2)"/>
        </group>

        <group ns="python_api">
            <param name="service_timeout" type="int" value="2" />
            <param name="action_connection_timeout" type="int" value="2" />
            <param name="action_execute_timeout" type="int" value="15" />
            <param name="action_preempt_timeout" type="int" value="3" />
        </group>

        <group ns="info">
            <param name="ros_version"               type="string" command="rosversion niryo_one_bringup" />
            <param name="niryo_one_one_robot_type"  type="string" value="NIRYO_ONE" />
            <param name="image_version"             type="string" if="$(arg execute_on_niryo_one_raspberry_pi_image)"
                textfile="/home/niryo/niryo_one_saved_values/niryo_one_image_version_do_not_edit.txt" />
        </group>
            
        <group ns="robot_state">
            <param name="rate_tf_listener" type="double" value="5.0" />
            <param name="rate_publish_state" type="double" value="20.0" />
        </group>

        <param name="urdf_without_meshes" value="$(arg urdf_without_meshes)" />
        <group if="$(eval hardware_version == 1)">
            <param name="robot_description" command="$(find xacro)/xacro --inorder $(find niryo_one_description)/urdf/v1/without_mesh_niryo_one.urdf.xacro" if="$(arg urdf_without_meshes)"/>
            <param name="robot_description" command="$(find xacro)/xacro --inorder $(find niryo_one_description)/urdf/v1/niryo_one.urdf.xacro" unless="$(arg urdf_without_meshes)"/>
            <param name="robot_description_tf2" command="$(find xacro)/xacro --inorder $(find niryo_one_description)/urdf/v2/niryo_one.urdf.xacro" />
        </group>
        <group if="$(eval hardware_version == 2)">
            <group if="$(arg without_gripper)">
                <param name="robot_description" command="$(find xacro)/xacro --inorder $(find niryo_one_description)/urdf/v2/without_mesh_niryo_one.urdf.xacro" if="$(arg urdf_without_meshes)"/>
                <param name="robot_description" command="$(find xacro)/xacro --inorder $(find niryo_one_description)/urdf/v2/gazebo_niryo_one.urdf.xacro" unless="$(arg urdf_without_meshes)"/>
                <param name="robot_description_tf2" command="$(find xacro)/xacro --inorder $(find niryo_one_description)/urdf/v2/gazebo_niryo_one.urdf.xacro" />
            </group>

            <group unless="$(arg without_gripper)">
                <param name="robot_description" command="$(find xacro)/xacro --inorder $(find niryo_one_description)/urdf/v2/without_mesh_niryo_one.urdf.xacro" if="$(arg urdf_without_meshes)"/>
                <param name="robot_description" command="$(find xacro)/xacro --inorder $(find niryo_one_description)/urdf/v2/niryo_one_gripper.urdf.xacro" unless="$(arg urdf_without_meshes)"/>
                <param name="robot_description_tf2" command="$(find xacro)/xacro --inorder $(find niryo_one_description)/urdf/v2/niryo_one_gripper.urdf.xacro" />
            </group>
        </group>

        <!-- Mainly for launching move groups -->
        <include file="$(find niryo_one_bringup)/launch/robot_commander_gripper.launch">
            <arg name="simulation_mode" value="$(arg niryo_one_sim_mode)" />
        </include>
    
        <!-- Load controller settings -->
        <rosparam file="$(find niryo_one_driver)/config/niryo_one_controllers.yaml" command="load" if="$(arg without_gripper)"/>

        <rosparam file="$(find niryo_one_driver)/config/niryo_gripper_controllers.yaml" command="load" unless="$(arg without_gripper)"/>

        <!-- spawn controllers -->
        <node name="arm_controller_spawner" pkg="controller_manager" type="spawner"  args="--namespace=/niryo_one joint_state_controller niryo_one_follow_joint_trajectory_controller" respawn="false" output="screen" if="$(arg without_gripper)"/>

        <node name="arm_controller_spawner" pkg="controller_manager" type="spawner"  args="--namespace=/niryo_one joint_state_controller niryo_one_follow_joint_trajectory_controller gazebo_tool_controller" respawn="false" output="screen" unless="$(arg without_gripper)"/>

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
            <param name="publish_frequency" type="double" value="20.0" />
			<remap from="joint_states" to="/niryo_one/joint_states" />
	    </node>

    </group>

    <!-- This outside the group since they already publish in the right namespace. This is actually messy, and we might want to rectify this in future -->
    <node name="niryo_one_tools" pkg="niryo_one_tools" type="tool_controller.py" output="screen" respawn="false"> 
        <rosparam file="$(find niryo_one_tools)/config/end_effectors.yaml" />
    </node>

    <!-- <node name="tf2_web_republisher" pkg="tf2_web_republisher" type="tf2_web_republisher"/>
    <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch">
        <arg name="port" value="9090"/>
    </include> -->


</launch>
